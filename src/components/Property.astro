---
export type PropertyProp = {
  name: string;
  date: string;
  type: string;
  parent?: string | null;
  specUrl?: string;
  mdnUrl?: string;
  year: string;
}

interface Props {
  property: PropertyProp;
}

const { property } = Astro.props;
---
<article class="property">
  <h3>{property.parent ? `${property.parent}: ${property.name}` : (property.type === '@' ? `${property.type}${property.name}` : `${property.type}: ${property.name}`)}</h3>
  <time datetime={property.date}>{new Date(property.date).toLocaleDateString('ru-RU')}</time>
  <nav aria-label="Ссылки">
    <ul>
      {property.specUrl && (
        <li><a href={property.specUrl}>Спецификация</a></li>
      )}
      {property.mdnUrl && (
        <li><a href={property.mdnUrl}>MDN</a></li>
      )}
      <li><a href={`https://caniuse.com/?search=${property.name}`}>caniuse</a></li>
    </ul>
  </nav>
</article>

<style>
  .property {
    border-radius: 0.75rem;
    padding: 1.25rem;
    background-color: var(--color-background-item);
    display: grid;
    row-gap: 0.5rem;
    grid-template-columns: [full-start] 1fr [full-end];
    box-shadow: 0 1px 4px hsl(0deg 0% 0% / 8%);

    h3 {
      margin-block: unset;
      margin-block-end: 8px;
      overflow-wrap: break-word;
    }

    time {
      grid-row: 1 / 2;
    }

    nav {
      grid-column: full;
    }

    nav ul {
      list-style: none;
      padding: 0;
      margin: 0;
      display: flex;
      flex-wrap: wrap;
      gap: 8px 16px;
    }

    a {
      background: var(--color-background-button);
      color: #fff;
      font-weight: 500;
      padding: 0.5rem 1rem;
      border-radius: 0.5rem;
      text-decoration: none;
      display: inline-block;
      transition: opacity 0.2s ease;
    }

    a:hover {
      opacity: 85%;
    }
  }
</style>
