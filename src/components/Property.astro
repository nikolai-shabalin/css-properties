---
export type PropertyProp = {
  name: string;
  date: string;
  type: string;
  parent?: string | null;
  specUrl?: string;
  mdnUrl?: string;
  year: string;
}

interface Props {
  property: PropertyProp;
}

const { property } = Astro.props;
---
<article class="property">
  <h3>{property.parent ? `${property.parent}: ${property.name}` : (property.type === '@' ? `${property.type}${property.name}` : `${property.type}: ${property.name}`)}</h3>
  <time datetime={property.date}>{new Date(property.date).toLocaleDateString('ru-RU')}</time>
  <div>
    {property.specUrl && <a href={property.specUrl}>Спецификация</a>}
    {property.mdnUrl && <a href={property.mdnUrl}>MDN</a>}
    <a href={`https://caniuse.com/?search=${property.name}`}>caniuse</a>
  </div>
</article>

<style>
  .property {
    border-radius: 8px;
    padding: 16px;
    background-color: var(--color-background-item);
    display: grid;
    row-gap: 8px;
    grid-template-columns: [full-start] 1fr [full-end];

    h3 {
      margin-block: unset;
      margin-block-end: 8px;
      overflow-wrap: break-word;
    }

    time {
      grid-row: 1 / 2;
    }

    div {
      grid-column: full;
      display: flex;
      flex-wrap: wrap;
      gap: 8px 16px;
    }

    a {
      background: var(--color-background-button);
      color: oklch(100% 0 89.876deg);
      font-weight: 500;
      padding: 8px 16px;
      border-radius: 8px;
      text-decoration: unset;
      display: inline-block;
    }
  }

</style>
